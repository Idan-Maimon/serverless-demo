apiVersion: v1
data:
  ca.crt: 
  namespace: a2Fma2E=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltVTNTbFZwU21KS2JuTm5aa3RzWm1KRmRXaFVia3htT0hNeVdHcDRiM05tVnkxbk4zQlRRbFV4TjBVaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpyWVdacllTSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnJZV1pyWVMxamJIVnpkR1Z5TFd0aFptdGhMWFJ2YTJWdUxYRjRhMmg2SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWJtRnRaU0k2SW10aFptdGhMV05zZFhOMFpYSXRhMkZtYTJFaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lKa01UUm1ZVFpoWWkxa1kyVTFMVFEyWkRVdE9UWXlaaTA0WWpjME1qZzBZekF5TXpZaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZhMkZtYTJFNmEyRm1hMkV0WTJ4MWMzUmxjaTFyWVdacllTSjkuTnpCUTJ3czQ5SnVSakNwU2psdm96SVFNLXMzRm9iQTQ1NWhOQndEODM3c2QyN2FsMDZZVXlRRDY5UXJDaVlZTnpyeC0wOG82MG1SSWNsMU9WLTZyY2E1cm44QW9na0JuZlR2WlNmNGFweEhLT05IQmExVWczc1Q0Tktjd3F3bFA5X1JDNjR5aVhWN2QwWGFFaEhHcG1ja0JveFJFS05tS3JlVEY1RDVkcVdnWDRPNlE4ci11SmZmM1habncycDhPVmM3UDAzM2RlMzRHWS03VEFmNENyOWtIeGd0ZVgyMXlWWDRIMkdXQ1A1NzExekVIWXR6NUsxM3hYWTJHUTlXOXppX0xya0lXT0N6MnZ5cHE1cUpXMm5vdnVFS0haeFVhcmZ6NXdYUmZmSlVmd0pPY2RlaGd2eTNTellZeUJDWkdTM1NQeVNVa1NwSjJKaDFKTGZvNjlPV3Jub2o4a1pYWjRXWHhwNjNQbllSQkRsTEIzUEdPZjBnOG5CVTNOWGR0NU83OWpoeFVRQjZqa1BaLVlDcW9KeUdMdHhRcklNM2VhbGphcHppS3R0MTZ2VkxOS3FxaUFORjRfRElnYkdnckkzUTFuOS1lSVhKWXNxTnJpTHJqUkdPaDRrQkhhSXNoTGlZdEdxN1ZIcTlRZzVqa3ZDZkdfcmI5WmpzejlCSUE1OFduVjZDQllVYWVzS0dlTm51VEFwNi1kV0IzLUxOSklyWGJCN3JIQXJCSTFqNHR1MUUzU0pyNmlKR1M0My00dC0wRE1MNWx1aTA0UWkxZXRoNmlnN1hEQVRSUDA5ZS02M1dINmlMVlY0bmtYVXRKNmFDQ1lKSDVSbDkwZ3V4VjR5TGYzbm9sSW05cm5HME1Pb3FkMmdSOGxYRnoxcDN4dWFGeWU3OTNIR1E=
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: kafka-cluster-kafka
    kubernetes.io/service-account.uid: d14fa6ab-dce5-46d5-962f-8b74284c0236
  creationTimestamp: "2023-01-05T11:56:17Z"
  name: kafka-cluster-kafka-token-qxkhz
  namespace: kafka
  resourceVersion: "151629"
  uid: 53c5229b-490c-4219-a692-6e259f3ddf81
type: kubernetes.io/service-account-token
